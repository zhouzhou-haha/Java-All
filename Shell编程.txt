Shell编程：
	Shell命令解释器，为用户提供一个向Linux内核发送请求以便运行程序的界面系统级程序	
	Shell脚本(xx.sh)编写：	
		1.脚本以#!/bin/bash开头
		2.脚本需要有可执行权限
		
	脚本执行方式：	
		1.输入脚本的绝对路径或相对路径
		2.sh + 脚本(不用赋予脚本执行权限，直接执行)
	
	Shell注释：
		单行注释：#注释内容
		多行注释：:<<! 内容  (换行)！
		
	Shell变量：
		系统变量：已经在系统中设置好的变量
			$HOME $PATH $PWD	......
			指令：set	显示所有系统变量
		用户自定义变量：
			定义变量：变量名=值
、			   例：	定义：A=100	输出：echo $A	
				A=date			将date值赋给A
				A='date'/$(date)	将date命令返回值赋给A	
				
				注:1.变量名称由字母，数字和下划线组成，不能以数字开头
				   2.等号两侧不能有空格
				   3.变量名一般为大写，书写规范
			撤销变量：unset 变量
			声明静态变量:readonly变量，静态变量不能撤销
			
		设置环境变量：
			export 变量名=变量值		将shell变量输出为环境变量/全局变量
			source 配置文件			让修改后的配置文件立即生效	
			echo $变量名			查询环境变量的值
		
		位置参数变量：
			$n	n为数字，0代表命令本身，1-9代表第1-9个参数
			$*	此变量代表命令行中所有参数
			$@	此变量代表命令行中所有参数
			$#	代表命令行中所有参数的个数
		
		预定义变量：	shell设计者实现已经定义好的变量，可以直接在shell脚本中使用
			$$	获取当前进程的进程号
			$!	后台运行的最后一个进程的进程号
			$?	最后一次执行的命令的返回状态

	运算符：
		基本语法:$((运算式))/$[运算式]/expr ’表达式‘
		\* /  %	乘 除 取余
		echo "res1 + res2"
		
	条件判断：
		[ condition ](condition前后必须要有空格)	条件非空返回true
		常用判断条件：
			字符串比较：=
			整数比较：
				-lt	小于
				-le	小于等于
				-eq	等于
				-gt	大于
				-ge	大于等于
				-ne	不等于
			文件权限判断：			文件类型判断：
				-r	有读权限			-f	文件存在并且是常规文件
				-w	有写的权限		-e	文件存在
				-x	有执行的权限		-d	文件存在且是目录

	流程控制：
		单分支：					多分支：
			if[ 条件判断式 ]				if[ 条件判断式 ]
		       	then					then
		       	代码					代码
		       	fi					elif[ 条件判断式 ]
								then
								代码	
								fi
		case：
			case $变量名 in	
			"值1")
			代码
			;;
			"值2"）
			代码
			;;
			esac
		for循环：
			基本语法1：
				for 变量 in "值1 值2 值3..."
				do
				代码
				done
			基本语法2：
				for((初始值；循环控制条件；变量变化))
				do
				程序
				done
		while循环：
			基本语法：
				while [ 条件判断式 ]
				do
				代码
				done
				echo
	
	read读取控制台输入：
		read[](变量名)
			-p	指定读取值时的提示符
			-t	指定读取值时等待的时间，若没有在规定时间内输入，不再等待
		例：read -t 10 -p "请输入一个数NUM1："NUM1

	函数：
		系统函数：
			basename		返回完整路径最后/后的部分，常用于获取文件名
			basename pathname suffix(后缀)		删掉所有的前缀包括最后一个/，显示字符串，指定后缀，输出结果将后缀删掉
			例：
				返回/home/aaa/test.txt的"test.txt"部分
				basename /home/aaa/test.txt
			
			dirname			返回完整路径最后/之前的部分，常用于返回路径部分
			dirname 文件绝对路径	从给定的包含绝对路径的文件名中去除文件名，返回剩下部分
			例：
				返回/home/aaa/test.txt的/home/aaa

		自定义函数
			[ function ] funname ()			注：funname函数名  ()形参
			{
				Action;				注：功能代码
				[return int;]			注：返回值
			}		
			
		自定义函数调用：funname [值]	
			
				




		