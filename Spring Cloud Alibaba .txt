衡量网站性能指标：
	响应时间：执行一个请求从开始到最后收到响应数据花费的总体时间
	并发数：系统同时能处理的请求数量
		并发连接数：客户端向服务器发起请求，建立TCP连接，每秒钟服务器连接的TCP数量
		请求数：QPS，每秒请求的数量
		并发用户数：单位时间内有多少用户
	吞吐量：单位时间内系统能处理的请求数量
		QPS：每秒请求数
		TPS：每秒事务数		事务：客户机向服务器发送请求然后服务器做出反应的过程		QPS >= 并发连接数 >= TPS

Spring Cloud Alibaba：
Spring Cloud Alibaba主要中间件：
	Sentinel	轻量级分布式系统熔断与限流
	RabbitMQ	分布式消息中间件
	Seata		分布式事务解决方案
	Dubbo		高性能Java RPC框架(服务治理)
	Zookeeper	Dubbo官方推荐注册中心
	Redis		基于键值对内存储存的非关系型数据库	在Redis中介绍
	Nacos		服务注册与发现			在Spring Cloud中介绍
		
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Zookeeper(动物管理员)：		Zookeeper是Apache开源的分布式应用程序协调服务
	主要功能：
		集群管理：分布式系统中，通过分布式的方式对多个服务进行监控，配置(配置管理)，协调(注册中心)，负载均衡
			配置管理(配置中心)：将相同的配置信息放在配置中心，需要的时候直接拉取		
			负载均衡：根据服务(实例)信息和负载均衡策略选择合适服务进行请求
			数据发布/订阅(注册中心)：Zookeeper作为注册中心，管理服务提供方(ip地址，端口号，url)，在服务消费方需要时发送给服务消费方

		消息队列：
		分布式锁(分布式同步)：分布式系统对共享资源访问机制。在同一时间内只有一个进程或线程访问共享资源	

		补充：不同主机(服务器)上相同的应用程序访问同一数据，在每一台主机(服务器)加锁synchronized不能保证数据一致性，需要添加分布式锁	

	

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Seata官网:https://seata.apache.org/zh-cn/docs/dev/seata-mertics

Seata：			2019年1月份蚂蚁金服和阿里巴巴共同开源的分布式事务解决方案
	分布式事务：分布式系统/微服务架构中，一个业务需要多个服务合作完成，每个服务都有事务。多个事务必须同时成功或失败

	事务特性：ACID(原子性/一致性/隔离性/持久性)	

		原子性		一个事务的所有操作，要么都执行完成，要么全部不执行
		一致性		事务完成时，所有数据都保持一致
		隔离性		数据库中事务一般都是并发的，两个并发的事务执行互补干扰
		持久性		一个事务完成之后数据被持久化到数据库。之后其他操作不会对事务结果产生影响或回滚操作

	全局事务：由一批分支事务组成的全局事务
	分支事务：每个服务的事务(本地事务)
					
	A服务 	-->	B服务		B服务(独立数据库)事务正确				
		--> 	C服务		C服务(独立数据库)事务出错		-->		A服务事务报错(原因:分支事务不一致性)

	Seata三个重要角色：		
		TC(事务协调者)：		全局事务状态/分支事务状态管理者					Server服务
			Seata服务器追踪全局事务的总体状态(正在进行/提交/回滚)和了解分支事务的状态(成功/失败/提交)
			根据所有分支事务状态一致(一致：提交;不一致：回滚)，决定全局事务提交或回滚
			TC向TM和RM报告全局事务和分支事务状态，TM和RM做出适当响应和调整
		
		TM(事务管理器)：		全局事务管理者							Client客户端
			向TC注册全局事务(提交全局事务的开始请求给TC)，所有分支事务注册到TC中
			根据TC维护的全局事务状态(正在进行/提交/回滚)和分支事务状态(成功/失败/提交)，做出开始，提交，回滚事务的决定

		RM(资源管理器)：		分支事务管理者							Client客户端
			负责管理具体的数据资源(数据库，消息队列)，确保在全局事务中正确使用和管理
			事务报告状态：
				事务开始	RM向TC注册分支事务，报告分支事务初始状态
				事务过程	RM通知TC本地事务执行状态(成功/失败/其他状态)		TC跟踪全局事务进展
				事务完成	RM通知TC本地事务执行最终结果(成功/失败)		TC决定全局事务最终状态
			TC决定回滚，RM将本地事务操作回滚到事务开始之前的状态
	

	微服务整合Seata：
		1.引入依赖
		<dependency>									引入Seata依赖，
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-seata</artifactId>
		</dependency>
		
		
	Seata四种事务模式：
		AT模式：			适用绝大部分业务场景		
		TCC模式
		SAGA模式
		XA模式

	
	


		

		


	

			
			









































		
		
	